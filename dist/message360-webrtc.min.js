var app=angular.module("vertoApp",["ngStorage","ui.bootstrap","ngAnimate","ui.router","vertoControllers","pascalprecht.translate","timer","ngToast","ngAudio","ngCookies","angularMoment"]);app.config(["$stateProvider","$urlRouterProvider","$translateProvider",function($stateProvider,$urlRouterProvider,$translateProvider){$stateProvider.state("login",{url:"/",templateUrl:"src/views/pages/login.html",controller:"loginController",title:"Welcome!"}).state("dashboard",{url:"/dashboard",templateUrl:"src/views/pages/dashboard.html",title:"Dashboard"}),$urlRouterProvider.otherwise("/"),$translateProvider.preferredLanguage("en").determinePreferredLanguage().fallbackLanguage("en").useSanitizeValueStrategy(null)}]),app.config(["ngToastProvider",function(ngToastProvider){ngToastProvider.configure({animation:"slide"})}]),app.run(["$rootScope","$http","ngToast",function($rootScope,$http,ngToast){$http.get("urlConfig.json").then(function(response){var loginUrl=response.data.login_url,fundsUrl=response.data.funds_url,numberUrl=response.data.number_url,tokenUrl=response.data.token_url,logsUrl=response.data.logs_url,phoneNumberListUrl=response.data.phone_number_list_url,tokenUrlNumberChange=response.data.token_url_number_change;""!==loginUrl?$rootScope.loginUrl=loginUrl:ngToast.create({className:"danger",content:"<p class='toast-text'>Login URL configuration invalid. Please check your configuration settings or have a look at documentation for more help.</p>"}),""!==fundsUrl?$rootScope.fundsUrl=fundsUrl:ngToast.create({className:"danger",content:"<p class='toast-text'>Funds URL configuration invalid. Please check your configuration settings or have a look at documentation for more help.</p>"}),""!==numberUrl?$rootScope.numberUrl=numberUrl:ngToast.create({className:"danger",content:"<p class='toast-text'>Number URL configuration invalid. Please check your configuration settings or have a look at documentation for more help.</p>"}),""!==tokenUrl?$rootScope.tokenUrl=tokenUrl:ngToast.create({className:"danger",content:"<p class='toast-text'>Token URL configuration invalid. Please check your configuration settings or have a look at documentation for more help.</p>"}),""!==logsUrl?$rootScope.logsUrl=logsUrl:ngToast.create({className:"danger",content:"<p class='toast-text'>Logs URL configuration invalid. Please check your configuration settings or have a look at documentation for more help.</p>"}),""!==tokenUrlNumberChange?$rootScope.tokenUrlNumberChange=tokenUrlNumberChange:ngToast.create({className:"danger",content:"<p class='toast-text'>Token URL configuration invalid. Please check your configuration settings or have a look at documentation for more help.</p>"}),""!==phoneNumberListUrl?$rootScope.phoneNumberListUrl=phoneNumberListUrl:ngToast.create({className:"danger",content:"<p class='toast-text'>Webrct override url configuration invalid. Please check your configuration settings or have a look at documentation for more help.</p>"})},function(error){ngToast.create({className:"danger",content:"<p class='toast-text'> Configuration file not found. Please check your configuration settings or have a look at documentation for more help.</p>"})}),window.onbeforeunload=function(e){window.location.ref="/"}}]);var vertoControllers=angular.module("vertoControllers",["ui.bootstrap","vertoService","storageService","angular-svg-round-progressbar","ngLetterAvatar","720kb.tooltips"]),mainController=angular.module("vertoControllers").controller("mainController",["$scope","$rootScope","$http","$location","$timeout","$q","verto","storage","$state","ngToast","callHistory","ngAudio","$uibModal",function($scope,$rootScope,$http,$location,$timeout,$q,verto,storage,$state,ngToast,callHistory,ngAudio,$uibModal){function checkFunds(){try{var url=$rootScope.fundsUrl;$http.post(url).then(function(response){console.log(response),response.data&&response.data.Message360&&1===response.data.Message360.ResponseStatus||($scope.logout(),ngToast.create({className:"danger",content:"<p class='toast-text'>"+response.data.Message360.Errors.Error[0].Code+": "+response.data.Message360.Errors.Error[0].Message+"</p>",additionalClasses:"customtoast"}))})}catch(err){$scope.logout(),ngToast.create({className:"danger",content:"<p class='toast-text'>"+response.data.Message360.Errors.Error[0].Code+": "+response.data.Message360.Errors.Error[0].Message+"</p>",additionalClasses:"customtoast"})}}function getLogs(){try{var url=$rootScope.logsUrl,data={username:$scope.user.username};console.log("into call logs"),console.log(data),$http.post(url,data).then(function(response){if(console.log(response),response.data&&response.data.Message360&&1===response.data.Message360.ResponseStatus){var data=response.data.Message360.WebRtcCall;callHistory.clear(),console.log("into seemaa seema");angular.forEach(data,function(value,key){$scope.callData={},$scope.callData={num:value.called_number,callerIdNumber:value.called_number,calltype:value.direction,date:value.start_date,time:value.start_time,callsid:value.call_sid},console.log($scope.callData),callHistory.add($scope.callData)}),console.log("count : "+response.data.Message360.count),storage.data.numOfCalls=response.data.Message360.count,console.log("storage count : "+storage.data.numOfCalls),$scope.callHistory=storage.data.callHistory}else $scope.logout(),ngToast.create({className:"danger",content:"<p class='toast-text'>"+response.data.Message360.Errors.Error[0].Code+": "+response.data.Message360.Errors.Error[0].Message+"</p>",additionalClasses:"customtoast"})})}catch(err){$scope.logout(),ngToast.create({className:"danger",content:"<p class='toast-text'>"+response.data.Message360.Errors.Error[0].Code+": "+response.data.Message360.Errors.Error[0].Message+"</p>",additionalClasses:"customtoast"})}}function getWebrtcOverrideNumbers(){try{var url=$rootScope.phoneNumberListUrl;console.log(url);var data={username:$scope.user.username};$http.post(url,data).then(function(response){if(console.log("into get webrtc-override numbers"),console.log(response),response.data&&response.data.Message360&&1===response.data.Message360.ResponseStatus){var data=response.data.Message360.Phones.Phone,webrtcOverridePhone=[];angular.forEach(data,function(value,key){$scope.webrtcOverridePhone={},webrtcOverridePhone.push(value.phone_number)}),$scope.webrtcOverrideNumbers=webrtcOverridePhone,console.log("into data aaaaa"),console.log($scope.webrtcOverrideNumbers)}else $scope.logout(),ngToast.create({className:"danger",content:"<p class='toast-text'>"+response.data.Message360.Errors.Error[0].Code+": "+response.data.Message360.Errors.Error[0].Message+"</p>",additionalClasses:"customtoast"})})}catch(err){$scope.logout(),ngToast.create({className:"danger",content:"<p class='toast-text'>"+response.data.Message360.Errors.Error[0].Code+": "+response.data.Message360.Errors.Error[0].Message+"</p>",additionalClasses:"customtoast"})}}function onWSClose(event,data){if(console.log(event,data),wsInstance)return!1;verto.data.call&&verto.hangup()}function onWSLogin(event,data){if(!wsInstance)return!1;wsInstance.close(),wsInstance=null}storage.data.language&&"browse"!==storage.data.language&&(storage.data.language="browser"),$scope.verto=verto,$scope.storage=storage,$scope.showReconnect=!0,$rootScope.progressLoading=!0,$rootScope.dialpad={number:"",countryCode:"US"},$scope.callHistory=[],$scope.user={},$scope.timerRunning=!1,$scope.incomingDid="",$scope.callData={},$scope.authenticating=!1,$scope.webrtcOverrideNumbers=[],$scope.loginErrors={type:"",message:"",fieldSpecificMessage:"",setErrors:function(type,message){this.type=type,this.message=message},setTimeoutErrors:function(type,message){$scope.authenticating=!1,this.type=type,this.message=message,$timeout(function(){$scope.loginErrors.type="",$scope.loginErrors.message="",$scope.loginErrors.fieldSpecificMessage=""},4e3),$scope.authenticating=!1},clearErrors:function(type){if(type)switch(type){case"username":"username"===$scope.loginErrors.type&&($scope.loginErrors.message="",$scope.loginErrors.fieldSpecificMessage="",$scope.loginErrors.type="");break;case"password":null!==$scope.loginErrors.password&&($scope.loginErrors.message="",$scope.loginErrors.fieldSpecificMessage="",$scope.loginErrors.type="");break;default:return}}},Date.prototype.today=function(){return(this.getDate()<10?"0":"")+this.getDate()+"/"+(this.getMonth()+1<10?"0":"")+(this.getMonth()+1)+"/"+this.getFullYear()},Date.prototype.timeNow=function(){return(this.getHours()<10?"0":"")+this.getHours()+":"+(this.getMinutes()<10?"0":"")+this.getMinutes()+":"+(this.getSeconds()<10?"0":"")+this.getSeconds()},$scope.notifications={speakerUpdated:!1,audioUpdated:!1,updateMessage:"",setTimeoutNotif:function(val){this.clearNotifs(),"speaker"===val&&(this.speakerUpdated=!0),"audio"===val&&(this.audioUpdated=!0),this.updateMessage="Successfully Updated.",$timeout(function(){$scope.notifications.speakerUpdated=!1,$scope.notifications.audioUpdated=!1},2e3)},clearNotifs:function(){this.speakerUpdated=!1,this.audioUpdated=!1,this.updateMessage=!1}},$scope.startTimer=function(){$scope.$broadcast("timer-start"),$scope.timerRunning=!0},$scope.stopTimer=function(){console.log("stopTimer function"),$scope.$broadcast("timer-stop"),$scope.timerRunning=!1},$scope.stopTimer=function(){console.log("reset function"),$scope.$broadcast("timer-reset"),$scope.timerRunning=!1},$scope.resumeTimer=function(){console.log("resume timer function"),$scope.$broadcast("timer-resume"),$scope.timerRunning=!0},$rootScope.regenerateToken=function(){$scope.login()},$scope.login=function(){console.log("login"),$scope.authenticating=!0;var connectCallback=function(v,connected){console.log("into callback function"),$scope.$apply(function(){verto.data.connecting=!1,connected&&(storage.data.uiConnected=verto.data.connected,storage.data.wsConnected=verto.data.connected,storage.data.firstName=verto.data.first_name,storage.data.lastName=verto.data.last_name,storage.data.countryCode=verto.data.country_code,storage.data.callerIdNumber=verto.data.cid,storage.data.username=verto.data.username,storage.data.webrtcDomain=verto.data.hostname,storage.data.accessToken=verto.data.passwd,callHistory.clear()),verto.data.connected?(console.log("connected to server"),localStorage.setItem("token","1"),verto.SaveState(),$state.go("dashboard"),$scope.authenticating=!1):($scope.loginErrors.setTimeoutErrors("server","Trouble connecting to the server, please try again."),$scope.authenticating=!1)})},data=localStorage.getItem("token");if(console.log(data),data>0){console.log($rootScope.tokenUrl);verto.RestoreState();console.log(restoreData);var data={phone_number:storage.data.callerIdNumber,username:restoreData.username};$scope.user.username=restoreData.username;var url=$rootScope.tokenUrlNumberChange;return console.log(data),void $http.post(url,data).then(function(res){if(res.data.error_message)return void $scope.loginErrors.setTimeoutErrors("default","Error establishing a connection, please try again in a few minutes.");if(res.data.Message360.Errors)return verto.data.connected=!1,verto.data.connected||(ngToast.create({className:"info",content:"<p class='toast-text'>Not able to reconnect server. Please login to continue.</p>",additionalClasses:"customtoast"}),$rootScope.logout()),void($scope.authenticating=!1);console.log(res.data);var data=res.data.Message360.Message,server_id=data.server_id.toLowerCase();console.log("Server id : "+server_id),storage.data.currentBalance=data.available_balance,verto.data.username=data.username,verto.data.cid=data.phone_number,verto.data.first_name=data.first_name,verto.data.last_name=data.last_name,verto.data.name=data.first_name+" "+data.last_name,verto.data.passwd=data.access_token,verto.data.hostname=data.webrtc_domain,verto.data.country_code=data.country_code,verto.data.wsURL="wss://"+server_id+".message360.com:8082",verto.data.connecting=!0,verto.data.login=verto.data.cid+"!"+verto.data.username+"@"+verto.data.hostname,verto.connect(connectCallback),getWebrtcOverrideNumbers(),getLogs()},function(err){console.error(err)})}if(!$scope.user.username)return $scope.loginErrors.type="username",$scope.loginErrors.fieldSpecificMessage="Username is required.",$scope.authenticating=!1,void($scope.isOpenUsername=!1);if(!$scope.user.password)return $scope.loginErrors.type="password",$scope.loginErrors.fieldSpecificMessage="Password is required.",$scope.authenticating=!1,void($scope.isOpenPassword=!1);var data={username:$scope.user.username,password:$scope.user.password},url=$rootScope.loginUrl;$http.post(url,data).then(function(res){if(console.log(res),res.data.error_message||!res.data.Message360||!res.data)return void $scope.loginErrors.setTimeoutErrors("default","Error establishing a connection, please try again in a few minutes.");if(res.data.Message360.Errors){var errorCode=res.data.Message360.Errors.Error[0].Code,message=res.data.Message360.Errors.Error[0].Message;switch(errorCode){case"ER-M360-WRT-107":$scope.loginErrors.type="username",$scope.loginErrors.fieldSpecificMessage=message;break;case"ER-M360-WRT-108":$scope.loginErrors.type="password",$scope.loginErrors.fieldSpecificMessage=message;break;case"ER-M360-WRT-109":case"ER-M360-WRT-110":$scope.loginErrors.setTimeoutErrors("default",message);break;case"ER-M360-WRT-111":$scope.loginErrors.type="username",$scope.loginErrors.fieldSpecificMessage=message;break;case"ER-M360-WRT-112":$scope.loginErrors.type="password",$scope.loginErrors.fieldSpecificMessage=message;break;default:$scope.loginErrors.setTimeoutErrors("default","Error establshing a connection, please try again in a few minutes.")}return void($scope.authenticating=!1)}var data=res.data.Message360.Message,server_id=data.server_id.toLowerCase();console.log("Server id : "+server_id),storage.data.currentBalance=data.available_balance,verto.data.username=data.username,verto.data.cid=data.phone_number,verto.data.first_name=data.first_name,verto.data.last_name=data.last_name,verto.data.name=data.first_name+" "+data.last_name,verto.data.passwd=data.access_token,verto.data.hostname=data.webrtc_domain,verto.data.country_code=data.country_code,verto.data.wsURL="wss://"+server_id+".message360.com:8082",verto.data.connecting=!0,verto.data.login=verto.data.cid+"!"+verto.data.username+"@"+verto.data.hostname,verto.connect(connectCallback),$scope.authenticating=!1,getLogs(),getWebrtcOverrideNumbers()},function(err){$scope.loginErrors.setTimeoutErrors("config","Configuration for this account is either not complete or invalid, please check and try again.")})},$rootScope.logout=function(){localStorage.setItem("token","0");var disconnectCallback=function(){storage.factoryReset()};verto.data.call&&verto.hangup(),$scope.showReconnect=!1,verto.disconnect(disconnectCallback),$state.go("login")},$rootScope.backspace=function(){var number=$rootScope.dialpad.number,length=number.length;$rootScope.dialpad.number=number.substring(0,length-1)},$rootScope.dtmf=function(number){"*"===number?ngAudio.play("src/sounds/dtmf/dtmf-star.mp3"):"#"===number?ngAudio.play("src/sounds/dtmf/dtmf-hash.mp3"):ngAudio.play("src/sounds/dtmf/dtmf-"+number+".mp3"),void 0!==$rootScope.dialpad.number&&null!==$rootScope.dialpad.number?$rootScope.dialpad.number=""+$rootScope.dialpad.number+number:$rootScope.dialpad.number=""+number},$rootScope.dtmfCall=function(){ngAudio.play("src/sounds/dtmf/dtmf-star.mp3")},$rootScope.callActive=function(data,params){console.log(data,params),verto.data.mutedMic=storage.data.mutedMic,storage.data.userStatus="connected",$scope.callData.startTime=new Date,console.log("in to call active in main controller"),1===storage.data.currentCall?(console.log("in cnd resume"),$timeout(function(){$scope.resumeTimer(),$scope.incall=!0})):(console.log("in cnd start"),$timeout(function(){$scope.startTimer(),$scope.incall=!0})),storage.data.calling=!1,storage.data.currentCall=1},$rootScope.$on("call.hangup",function(event,data){console.log(event,data),$scope.callConnected=!1,$timeout(function(){$scope.resetTimer()}),$timeout(function(){$scope.incomingCall=!1}),$scope.incall=!1,storage.data.numOfCalls+=1,$rootScope.dialpad.number="",console.log("into on hangup"),console.log(storage.data);new Date;getLogs(),checkFunds();try{$rootScope.$digest()}catch(e){}}),$rootScope.$on("call.active",function(event,data,params){$rootScope.callActive(data,params)}),$rootScope.$on("call.calling",function(event,data){console.log(event,data),storage.data.calling=!0}),$rootScope.$on("call.incoming",function(event,data){console.log("into on hangup"),console.log(event),console.log("data"),console.log(data),console.log("assign caller id"),storage.data.currentCall=0,$scope.incomingDid=data,$scope.$apply(function(){$scope.incomingCall=!0}),storage.data.videoCall=!1,storage.data.mutedMic=!1,storage.data.mutedVideo=!1}),$rootScope.answerCall=function(){storage.data.onHold=!1,verto.data.call.answer({useStereo:storage.data.useStereo,useCamera:storage.data.selectedVideo,useVideo:storage.data.useVideo,useMic:storage.data.useMic,callee_id_name:verto.data.name,callee_id_number:verto.data.login}),$timeout(function(){$scope.incomingCall=!1,$scope.callConnected=!0},500)},$scope.declineCall=function(){$timeout(function(){verto.hangup(),$scope.incomingCall=!1})},$scope.changeFromNumber=function(){console.log(storage.data.callerIdNumber),$scope.login()},$scope.hangup=function(){$scope.callConnected=!1,$timeout(function(){if(!verto.data.call)return!1;verto.hangup()},1500)},$scope.hold=function(){console.log("into hold"),storage.data.onHold=!storage.data.onHold,console.log(storage.data.onHold),verto.data.call.toggleHold()},$scope.cbMuteMic=function(event,data){console.log(event,data),storage.data.mutedMic=!storage.data.mutedMic},$scope.muteMic=verto.muteMic,$rootScope.$on("ws.close",onWSClose),$rootScope.$on("ws.login",onWSLogin);var wsInstance;$scope.quickCall=function(extension){if(verto.data.call)ngToast.create({className:"danger",content:"<p class='toast-text'>A call is already in progress.</p>",additionalClasses:"customtoast"});else{var toCall="wrtc"+extension;storage.data.currentCall=0,storage.data.onHold=!1,storage.data.mutedVideo=!1,storage.data.mutedMic=!1,storage.data.videoCall=!1,verto.call(toCall),storage.data.calledNumber=extension}},$scope.quickCallNumber=function(number_call){$("#dialpadNumber").css("color",""),$scope.dialpad.number=number_call}}]);mainController.$inject=["$scope","$rootScope","$http","$location","$timeout","$q","verto","storage","$state","ngToast","callHistory","ngAudio","$uibModal"];var loginController=angular.module("vertoControllers").controller("loginController",["preRoute","$rootScope","$state","$scope",function(preRoute,$rootScope,$state,$scope){$scope.authenticating=!1,$scope.user.password="",$scope.user.username="",0==localStorage.getItem("token")?(console.log("0"),$state.go("login")):$rootScope.regenerateToken(),preRoute.checkLogin()}]);loginController.$inject=["preRoute","$rootScope","$state","$scope"];var dialpadController=angular.module("vertoControllers").controller("dialpadController",["$rootScope","$scope","$http","$state","verto","storage","ngAudio","ngToast",function($rootScope,$scope,$http,$state,verto,storage,ngAudio,ngToast){function checkNumber(countryCode,extension){switch(countryCode){case"US":return 12===extension.length||10===extension.length?(extension=extension.replace("+1",""),extension="wrtc+1"+extension):extension="invalid";default:return}}function call(extension){$scope.stopTimer(),$rootScope.dtmfCall(),storage.data.currentCall=0,storage.data.onHold=!1,$rootScope.dialpad.number=extension,storage.data.mutedVideo=!1,storage.data.mutedMic=!1,storage.data.videoCall=!1;var numToCall=checkNumber($rootScope.dialpad.countryCode,extension);"invalid"===numToCall?ngToast.create({className:"danger",content:"<p class='toast-text'>Dialed number is invalid.</p>",additionalClasses:"customtoast"}):(console.log(numToCall),verto.call(numToCall),$scope.callConnected=!0,storage.data.calledNumber=extension)}storage.data.notifications=!0,storage.data.videoCall=!1,storage.data.userStatus="connecting",storage.data.calling=!1,$scope.countryCode="",$scope.loading=!1,$scope.cancelled=!1,$scope.call=function(extension){$scope.loading=!0,call(extension)},$scope.cancel=function(){$scope.cancelled=!0}}]);dialpadController.$inject.ngToast;var wsReconnectController=function($scope,storage,verto){console.log("Executing Websocket Controller.")};wsReconnectController.$inject=["$scope","storage","verto"],angular.module("vertoControllers").controller("wsReconnectController",wsReconnectController);var widgetController=angular.module("vertoControllers").controller("widgetController",["$scope","$rootScope","$http","$location","$timeout","$q","verto","storage","$state","ngAudio",function($scope,$rootScope,$http,$location,$timeout,$q,verto,storage,$state,ngAudio){function init(){$scope.content.showLogin=!0,$scope.content.showDialer=!1,$scope.content.showInCall=!1,$scope.content.incomingCall=!1}function clearErrors(){$scope.errors={},console.log("errors cleared")}function checkFunds(){console.log("funds url"),console.log($rootScope.fundsUrl),$http.post($rootScope.fundsUrl).then(function(response){1!=response.data.Message360.ResponseStatus?($scope.logout(),$scope.errors.fundError=response.data.Message360.Errors.Error.Code+": "+response.data.Message360.Errors.Error.Message+".",$rootScope.$broadcast("addError"),init()):($scope.content.showInCall=!1,$scope.content.showDialer=!0)})}console.debug("widgetcontroller load"),$scope.content={},$scope.user={},$scope.errors={},$scope.dialpad={},$scope.authenticatedNumber=!1,$scope.callData={},init(),$scope.logout=function(){var disconnectCallback=function(){storage.factoryReset()};verto.data.call&&verto.hangup(),$scope.showReconnect=!1,verto.disconnect(disconnectCallback),verto.hangup()},$scope.$on("addError",function(){$timeout(clearErrors,4e3)}),$scope.authenticateNumber=function(){var data={phone_number:$scope.user.cid};$http.post($rootScope.numberUrl,data).then(function(response){return response.data.Message360.Errors?(console.log(response.data.Message360),$scope.errors.cidError=response.data.Message360.Errors.Error[0].Code+": "+response.data.Message360.Errors.Error[0].Message,$rootScope.$broadcast("addError"),$scope.authenticatedNumber=!1):(storage.data.callerIdNumber=$scope.user.cid,$scope.authenticatedNumber=!0)})},$scope.requestToken=function(){var connectCallback=function(v,connected){$scope.$apply(function(){verto.data.connecting=!1,connected&&(storage.data.uiConnected=verto.data.connected,storage.data.wsConnected=verto.data.connected,storage.data.firstName=verto.data.first_name,storage.data.lastName=verto.data.last_name,storage.data.countryCode=verto.data.country_code,storage.data.callerIdNumber=verto.data.cid,storage.data.username=verto.data.username,storage.data.webrtcDomain=verto.data.hostname,storage.data.accessToken=verto.data.passwd),1==verto.data.connected?($scope.content.showLogin=!1,$scope.content.showDialer=!0,console.debug("connected")):($scope.errors.serverError="Error connecting with the server.",$rootScope.$broadcast("addError"))})},data={phone_number:$scope.user.cid,username:$scope.user.username};$http.post($rootScope.tokenUrl,data).then(function(res){if(res.data.error_message)return $scope.errors.serverError="Error establshing a connection, please try again in a few minutes.",void $rootScope.$broadcast("addError");if(res.data.Message360.Errors){var errorCode=res.data.Message360.Errors.Error[0].Code,message=res.data.Message360.Errors.Error[0].Message;switch(errorCode){case"ER-M360-WRT-107":$scope.errors.authError=message,$rootScope.$broadcast("addError");break;case"ER-M360-WRT-104":$scope.errors.cidError=message,$rootScope.$broadcast("addError");default:$scope.errors.serverError="Error establshing a connection, please try again in a few minutes.",$rootScope.$broadcast("addError")}return void($scope.authenticating=!1)}var data=res.data.Message360.Message,server_id=data.server_id.toLowerCase();console.log("Server id : "+server_id),storage.data.currentBalance=data.available_balance,verto.data.username=data.username,verto.data.cid=data.phone_number,verto.data.first_name=data.first_name,verto.data.last_name=data.last_name,verto.data.name=data.first_name+" "+data.last_name,verto.data.passwd=data.access_token,verto.data.hostname=data.webrtc_domain,verto.data.country_code=data.country_code,verto.data.wsURL="wss://"+server_id+".message360.com:8082",verto.data.connecting=!0,verto.data.login=verto.data.cid+"!"+verto.data.username+"@"+verto.data.hostname,verto.connect(connectCallback)},function(err){$scope.errors.serverError="Error establshing a connection, please try again in a few minutes.",$rootScope.$broadcast("addError")})},$scope.login=function(){$scope.authenticateNumber(),$timeout(function(){if(console.log($scope.authenticatedNumber),1!=$scope.authenticatedNumber)return!1;$scope.requestToken()},1e3)},storage.data.notifications=!0,storage.data.videoCall=!1,storage.data.userStatus="connecting",storage.data.calling=!1,$scope.call=function(){if(storage.data.currentCall=0,storage.data.onHold=!1,!$scope.dialpad.number)return $scope.errors.callError="Please enter a ten digit number.",!1;if(verto.data.call)return $scope.errors.callError="There is a call in progress.",!1;storage.data.mutedVideo=!1,storage.data.mutedMic=!1,storage.data.videoCall=!1;verto.call("wrtc1"+$scope.dialpad.number),storage.data.calledNumber=$scope.dialpad.number,console.log(storage.data.calledNumber),$scope.content.showDialer=!1,$scope.content.showInCall=!0},$scope.dtmf=function(number){"*"==number?ngAudio.play("src/sounds/dtmf/dtmf-star.mp3"):"#"==number?ngAudio.play("src/sounds/dtmf/dtmf-hash.mp3"):ngAudio.play("src/sounds/dtmf/dtmf-"+number+".mp3"),void 0!==$scope.dialpad.number&&null!==$scope.dialpad.number?$scope.dialpad.number=""+$scope.dialpad.number+number:$scope.dialpad.number=""+number},$scope.backspace=function(){var number=$scope.dialpad.number,length=number.length;$scope.dialpad.number=number.substring(0,length-1)},$scope.hold=function(){storage.data.onHold=!storage.data.onHold,verto.data.call.toggleHold()},$scope.cbMuteMic=function(event,data){storage.data.mutedMic=!storage.data.mutedMic},$scope.muteMic=verto.muteMic,$scope.hangup=function(){$timeout(function(){verto.data.call&&verto.hangup()},1e3)},$rootScope.dtmfCall=function(){ngAudio.play("src/sounds/dtmf/dtmf-star.mp3")},$scope.timerRunning=!1,$scope.startTimer=function(){$scope.$broadcast("timer-start"),$scope.timerRunning=!0},$scope.stopTimer=function(){console.log("stopTimer function"),$scope.$broadcast("timer-stop"),$scope.timerRunning=!1},$rootScope.callActive=function(data,params){verto.data.mutedMic=storage.data.mutedMic,storage.data.userStatus="connected",$scope.callData.startTime=new Date,$timeout(function(){$scope.startTimer(),$scope.incall=!0}),storage.data.calling=!1,storage.data.currentCall=1},$rootScope.answerCall=function(){console.log("into anwsercall"),storage.data.onHold=!1,console.log(storage.data),verto.data.call.answer({useStereo:storage.data.useStereo,useCamera:storage.data.selectedVideo,useVideo:storage.data.useVideo,useMic:storage.data.useMic,callee_id_name:verto.data.name,callee_id_number:verto.data.login}),console.log("after verto anwsercall"),$timeout(function(){$scope.content.incomingCall=!1,$scope.callConnected=!0,$scope.startTimer(),$scope.incall=!0},500),$scope.content.showInCall=!0,console.log("last anwsercall")},$scope.declineCall=function(){console.log("into descline"),$scope.content.incomingCall=!1,$timeout(function(){verto.hangup(),$scope.content.showInCall=!0})},$rootScope.$on("call.hangup",function(event,data){$timeout(function(){console.log("Hangup"),$scope.stopTimer()}),checkFunds(),$scope.content.incomingCall=!1,$scope.dialpad.number="",$scope.callConnected=!1,$scope.content.showInCall=!0;try{$rootScope.$digest()}catch(e){}}),$rootScope.$on("call.active",function(event,data,params){$rootScope.callActive(data,params)}),$rootScope.$on("call.calling",function(event,data){storage.data.calling=!0}),$rootScope.$on("call.incoming",function(event,data){console.log("into incomming calls"),storage.data.currentCall=0,$scope.incomingDid=data,console.log($scope.incomingDid),$scope.$apply(function(){console.log("into incomming calls timeout"),$scope.content.incomingCall=!0}),storage.data.videoCall=!1,storage.data.mutedMic=!1,storage.data.mutedVideo=!1})}]);widgetController.$inject=["$scope","$rootScope","$http","$location","$timeout","$q","verto","storage","$state","ngAudio"];var progressController=angular.module("vertoControllers").controller("progressController",["$scope","$rootScope","$interval","$timeout","$window","roundProgressService","loadScreen",function($scope,$rootScope,$interval,$timeout,$window,roundProgressService,loadScreen){$scope.current=loadScreen.progressPercentage,$scope.max=100,$scope.offset=0,$scope.timerCurrent=0,$scope.uploadCurrent=0,$scope.stroke=10,$scope.radius=85,$scope.isSemi=!1,$scope.rounded=!1,$scope.responsive=!1,$scope.clockwise=!0,$scope.currentColor="#617487",$scope.bgColor="#eaeaea",$scope.duration=800,$scope.currentAnimation="easeOutCubic",$scope.animationDelay=0,$scope.message="",$scope.interruptNext=!1,$scope.errors=[];var checkProgressState=function(currentProgress,status,promise,activity,soft,interruptNext,message){if($scope.current=loadScreen.calculate(currentProgress),$scope.message=message,interruptNext&&"error"==status){if($scope.errors.push(message),!soft)return void redirectTo("",activity);message+=". Continue?",confirm(message)||($scope.interruptNext=!0)}if(!$scope.interruptNext)return $scope.message=loadScreen.getProgressMessage(currentProgress+1),!0};$rootScope.$on("progress.next",function(ev,currentProgress,status,promise,activity,soft,interrupt,message){$timeout(function(){if(promise)return void promise.then(function(response){message=response.message,status=response.status,checkProgressState(currentProgress,status,0,activity,soft,interrupt,message)&&loadScreen.next()});checkProgressState(currentProgress,status,0,activity,soft,interrupt,message)&&loadScreen.next()},600)}),$rootScope.$on("progress.complete",function(ev,currentProgress){$scope.message="Done configuring, going to login.",$timeout(function(){$scope.$apply(function(){$rootScope.progressLoading=!1})},0)}),$scope.increment=function(amount){$scope.current+=amount||1},$scope.decrement=function(amount){$scope.current-=amount||1},$scope.animations=[],angular.forEach(roundProgressService.animations,function(value,key){$scope.animations.push(key)}),$scope.getStyle=function(){var transform=($scope.isSemi?"":"translateY(-50%) ")+"translateX(-50%)";return{top:$scope.isSemi?"auto":"50%",bottom:$scope.isSemi?"5%":"auto",left:"50%",transform:transform,"-moz-transform":transform,"-webkit-transform":transform,"font-size":$scope.radius/3.5+"px"}},$scope.getColor=function(){return $scope.gradient?"url(#gradient)":$scope.currentColor},$scope.showPreciseCurrent=function(amount){$timeout(function(){if(amount<=0)$scope.preciseCurrent=$scope.current;else{var math=$window.Math;$scope.preciseCurrent=math.min(math.round(amount),$scope.max)}})};loadScreen.next()}]);progressController.$inject=["$scope","$rootScope","$interval","$timeout","$window","roundProgressService","loadScreen"];var dashboardPanelController=angular.module("vertoControllers").controller("dashboardPanelController",["$rootScope","$scope","$http","$state","verto","storage","preRoute",function($rootScope,$scope,$http,$state,verto,storage,preRoute){"use strict";0==localStorage.getItem("token")?$state.go("login"):$rootScope.regenerateToken(),$scope.mediaDevices={availableSpeakerDevices:verto.data.speakerDevices,availableAudioDevices:verto.data.audioDevices,speakerSource:"",audioSource:"",refreshDevices:function(){verto.refreshDevices()},updateSpeaker:function(){""!==this.speakerSource&&(console.log(this.speakerSource),storage.data.selectedSpeakerLabel=this.speakerSource.label,storage.data.selectedSpeaker=this.speakerSource.id,$scope.notifications.setTimeoutNotif("speaker"))
},updateAudio:function(){""!==this.audioSource&&(console.log(this.audioSource),storage.data.selectedAudioLabel=this.audioSource.label,storage.data.selectedAudio=this.audioSource.id,$scope.notifications.setTimeoutNotif("audio"))}},$scope.panelContent={selected:"callHistory",isOpen:!0,callsid:"",changeContent:function(opt){opt&&(this.selected=opt)},showPopOver:function(call_sid){console.log("into show popover"),console.log(call_sid),console.log(this.isOpen),0==this.isOpen?(console.log("into false"),this.callsid=call_sid,this.isOpen=!0):(console.log("into true"),this.isOpen=!1,this.callsid="")}}}]);dashboardPanelController.$inject.preRoute;var vertoService=angular.module("vertoService",[]),videoQuality=[],videoQualitySource=[{id:"qvga",label:"QVGA 320x240",width:320,height:240},{id:"vga",label:"VGA 640x480",width:640,height:480},{id:"qvga_wide",label:"QVGA WIDE 320x180",width:320,height:180},{id:"vga_wide",label:"VGA WIDE 640x360",width:640,height:360},{id:"hd",label:"HD 1280x720",width:1280,height:720},{id:"hhd",label:"HHD 1920x1080",width:1920,height:1080}],videoResolution={qvga:{width:320,height:240},vga:{width:640,height:480},qvga_wide:{width:320,height:180},vga_wide:{width:640,height:360},hd:{width:1280,height:720},hhd:{width:1920,height:1080}},bandwidth=[{id:"250",label:"250kb"},{id:"500",label:"500kb"},{id:"1024",label:"1mb"},{id:"1536",label:"1.5mb"},{id:"2048",label:"2mb"},{id:"3196",label:"3mb"},{id:"4192",label:"4mb"},{id:"5120",label:"5mb"},{id:"0",label:"No Limit"},{id:"default",label:"Server Default"}],framerate=[{id:"15",label:"15 FPS"},{id:"20",label:"20 FPS"},{id:"30",label:"30 FPS"}];angular.module("vertoService").service("verto",["$rootScope","$state","storage","$location","$timeout",function($rootScope,$state,storage,$location,$timeout){function cleanCall(){data.call=null,data.callState=null,data.conf=null,data.confLayouts=[],data.confRole=null,data.chattingWith=null,$rootScope.$emit("call.hangup","hangup")}function callActive(last_state,params){$rootScope.$emit("call.active",last_state,params)}function calling(){$rootScope.$emit("call.calling","calling")}function incomingCall(number){$rootScope.$emit("call.incoming",number)}function updateResolutions(supportedResolutions){return console.debug("Attempting to sync supported and available resolutions"),console.debug("VQ length: "+videoQualitySource.length),console.debug(supportedResolutions),angular.forEach(videoQualitySource,function(resolution,id){angular.forEach(supportedResolutions,function(res){var width=res[0],height=res[1];resolution.width==width&&resolution.height==height&&videoQuality.push(resolution)})}),console.debug("VQ length 2: "+videoQuality.length),data.videoQuality=videoQuality,console.debug(videoQuality),data.vidQual=videoQuality.length>0?videoQuality[videoQuality.length-1].id:null,console.debug(data.vidQual),videoQuality}var data={instance:null,connected:!1,call:null,shareCall:null,callState:null,conf:null,confLayouts:[],confRole:null,chattingWith:null,liveArray:null,videoDevices:[],audioDevices:[],shareDevices:[],speakerDevices:[],videoQuality:[],extension:null,name:null,first_name:null,last_name:null,username:null,country_code:null,cid:null,textTo:null,login:null,passwd:null,hostname:"",wsURL:""};return{data:data,callState:{muteMic:!1,muteVideo:!1},videoQuality:videoQuality,videoResolution:videoResolution,bandwidth:bandwidth,framerate:framerate,refreshDevicesCallback:function(callback){data.videoDevices=[{id:"none",label:"No Camera"}],data.shareDevices=[{id:"screen",label:"Screen"}],data.audioDevices=[],data.speakerDevices=[],storage.data.selectedShare||(storage.data.selectedShare=data.shareDevices[0].id);for(var i in jQuery.verto.videoDevices){var device=jQuery.verto.videoDevices[i];device.label?data.videoDevices.push({id:device.id,label:device.label||device.id}):data.videoDevices.push({id:"Camera "+i,label:"Camera "+i}),0!=i||storage.data.selectedVideo||(storage.data.selectedVideo=device.id,storage.data.selectedVideoLabel=device.label),device.label?data.shareDevices.push({id:device.id,label:device.label||device.id}):data.shareDevices.push({id:"Share Device "+i,label:"Share Device "+i})}for(var i in jQuery.verto.audioInDevices){var device=jQuery.verto.audioInDevices[i];0!=i||storage.data.selectedAudio||(storage.data.selectedAudio=device.id,storage.data.selectedAudioLabel=device.label),device.label?data.audioDevices.push({id:device.id,label:device.label||device.id}):data.audioDevices.push({id:"Microphone "+i,label:"Microphone "+i})}for(var i in jQuery.verto.audioOutDevices){console.log(jQuery.verto.audioOutDevices);var device=jQuery.verto.audioOutDevices[i];0!=i||storage.data.selectedSpeaker||(storage.data.selectedSpeaker=device.id,storage.data.selectedSpeakerLabel=device.label),device.label?data.speakerDevices.push({id:device.id,label:device.label||device.id}):data.speakerDevices.push({id:"Speaker "+i,label:"Speaker "+i})}console.debug("Devices were refreshed, checking that we have cameras.");var videoFlag=data.videoDevices.some(function(device){return device.id==storage.data.selectedVideo}),shareFlag=data.shareDevices.some(function(device){return device.id==storage.data.selectedShare}),audioFlag=data.audioDevices.some(function(device){return device.id==storage.data.selectedAudio}),speakerFlag=data.speakerDevices.some(function(device){return device.id==storage.data.selectedSpeaker});videoFlag||(storage.data.selectedVideo=data.videoDevices[0].id),shareFlag||(storage.data.selectedShare=data.shareDevices[0].id),audioFlag||(storage.data.selectedAudio=data.audioDevices[0].id),!speakerFlag&&data.speakerDevices.length>0&&(storage.data.selectedSpeaker=data.speakerDevices[0].id),0===data.videoDevices.length?(console.log("No camera, disabling video."),data.canVideo=!1,data.videoDevices.push({id:"none",label:"No camera"})):data.canVideo=!0,angular.isFunction(callback)&&callback()},refreshDevices:function(callback){console.debug("Attempting to refresh the devices."),callback?jQuery.verto.refreshDevices(callback):jQuery.verto.refreshDevices(this.refreshDevicesCallback)},refreshVideoResolution:function(resolutions){if(console.debug("Attempting to refresh video resolutions."),data.instance){var w=resolutions.bestResSupported[0],h=resolutions.bestResSupported[1];1080===h&&(w=1280,h=720),updateResolutions(resolutions.validRes),data.instance.videoParams({minWidth:w,minHeight:h,maxWidth:w,maxHeight:h,minFrameRate:15,vertoBestFrameRate:storage.data.bestFrameRate}),videoQuality.forEach(function(qual){w===qual.width&&h===qual.height&&(storage.data.vidQual===qual.id&&void 0!==storage.data.vidQual||(storage.data.vidQual=qual.id))})}else console.debug("There is no instance of verto.")},connect:function(callback){function ourBootstrap(){var sessid=$location.search().sessid;if("random"===sessid&&(sessid=$.verto.genUUID(),$location.search().sessid=sessid),data.instance&&!data.instance.rpcClient.socketReady())return clearTimeout(data.instance.rpcClient.to),data.instance.logout(),void data.instance.login();data.instance=new jQuery.verto({login:data.login,passwd:data.passwd,socketUrl:data.wsURL,tag:"webcam",ringFile:"src/sounds/bellring.wav",userVariables:{webrtc_username:storage.data.username},audioParams:{googEchoCancellation:storage.data.googEchoCancellation||!0,googNoiseSuppression:storage.data.googNoiseSuppression||!0,googHighpassFilter:storage.data.googHighpassFilter||!0},sessid:sessid,iceServers:storage.data.useSTUN},callbacks),that.reloaded=!1,jQuery.verto.unloadJobs.push(function(){that.reloaded=!0}),data.instance.deviceParams({useCamera:storage.data.selectedVideo,useSpeak:storage.data.selectedSpeaker,useMic:storage.data.selectedAudio,onResCheck:that.refreshVideoResolution})}console.debug("Attempting to connect to verto with data: "),console.log(data);var that=this,callbacks={onWSLogin:function(v,success){data.connected=success,$rootScope.$emit("ws.login",success),console.debug("Connected to verto server:",success),angular.isFunction(callback)&&callback(v,success)},onDialogState:function(d){switch(data.call||(data.call=d),$rootScope.customStyle={},console.debug("onDialogState:",d),console.debug(storage.data.calling),console.log(data.callState),storage.data.calltype=d.direction.name,d.state.name){case"ringing":console.log("into ringing"),data.callState="ringing",incomingCall(d.params.caller_id_number);break;case"trying":console.debug("Calling 1111:",d.cidString()),$timeout(function(){console.log("in timer"),$("#dialpadNumber").css("color","green"),console.debug("Calling:",d.cidString()),data.callState="trying"},5e3);break;case"early":calling(),console.debug("Talking to:",d.cidString()),data.callState="early";break;case"active":$rootScope.model={isDisabled:!0},$("#dialpadNumber").css("color","blue"),console.debug("Talking to:",d.cidString()),data.callState="active",callActive(d.lastState.name,d.params);break;case"hangup":console.log(d),console.debug("Call ended with cause: "+d.cause),data.callState="hangup";break;case"destroy":$("#dialpadNumber").css("color",""),console.debug("Destroying: "+d.cause),cleanCall();break;default:console.warn("Got a not implemented state:",d.state);break;case"requesting":console.log(d),data.callState="requesting",console.debug("Requesting: ")}},onWSClose:function(v,success){console.debug("onWSClose:",success),$rootScope.$emit("ws.close",success)},onEvent:function(v,e){console.log(data.instance.handleMessage)}},that=this;data.mediaPerm?ourBootstrap():$.FSRTC.checkPerms(ourBootstrap,!0,!0)},mediaPerm:function(callback){$.FSRTC.checkPerms(callback,!0,!0)},login:function(callback){data.instance.loginData({login:data.login,passwd:data.passwd}),data.instance.login(),angular.isFunction(callback)&&callback(data.instance,!0)},disconnect:function(callback){console.debug("Attempting to disconnect to verto."),data.instance.logout(),data.connected=!1,console.debug("Disconnected from verto server."),angular.isFunction(callback)&&callback(data.instance,data.connected)},call:function(destination,callback,custom){console.debug("Attempting to call destination "+destination+".");var call=data.instance.newCall(angular.extend({destination_number:destination,caller_id_name:storage.data.callerIdNumber,caller_id_number:storage.data.callerIdNumber,outgoingBandwidth:storage.data.outgoingBandwidth,incomingBandwidth:storage.data.incomingBandwidth,useVideo:storage.data.useVideo,useStereo:storage.data.useStereo,useCamera:storage.data.selectedVideo,useSpeak:storage.data.selectedSpeaker,useMic:storage.data.selectedAudio,dedEnc:storage.data.useDedenc,mirrorInput:storage.data.mirrorInput,userVariables:{name:storage.data.name}},custom));data.call=call,data.mutedMic=!1,data.mutedVideo=!1,this.refreshDevices(),angular.isFunction(callback)&&callback(data.instance,call)},hangup:function(callback){if($rootScope.dtmfCall(),console.debug("Attempting to hangup the current call."),!data.call)return console.debug("There is no call to hangup."),!1;data.call.hangup(),data.conf&&(data.conf.destroy(),data.conf=null),console.debug("Message: Call was hung up."),angular.isFunction(callback)&&callback(data.instance,!0)},makeCall:function(number,callback){if(console.debug('Attempting to make a call to "'+number+'".'),!data.call)return console.debug("There is no number to send."),!1;data.call.makeCall(number),console.debug("The request was sent for the call."),angular.isFunction(callback)&&callback(data.instance,!0)},dtmf:function(number,callback){if(console.debug("DTMF: "+number),!data.call)return console.debug("No call to send the number to"),!1;data.call.dtmf(number),console.debug("The DTMF was sent for the call"),angular.isFunction(callback)&&callback(data,instance)},muteMic:function(callback){if(!data.call)return!1;console.debug("Toggling mute for the call."),data.call.setMute("toggle"),data.mutedMic=!data.mutedMic,angular.isFunction(callback)&&callback(data.instance,!0)},muteVideo:function(callback){if(console.debug("Attempting to mute video for the current call."),!data.call)return console.debug("There is no call to mute."),!1;data.call.dtmf("*0"),data.mutedVideo=!data.mutedVideo,console.debug("The video was muted for the call."),angular.isFunction(callback)&&callback(data.instance,!0)},SaveState:function(){console.log("into save");var restoreData={username:data.username,cid:data.cid,first_name:data.first_name,last_name:data.last_name,name:data.first_name+" "+data.last_name,passwd:data.access_token,hostname:data.webrtc_domain,country_code:data.country_code,wsURL:data.wsURL,connecting:!0,login:data.login},store=angular.toJson(restoreData);localStorage.setItem("vertoStorageData",store),console.log(data)},RestoreState:function(){return console.log("into restore"),restoreData=JSON.parse(localStorage.vertoStorageData),console.log(data),restoreData}}}]),angular.module("vertoService").service("eventQueue",["$rootScope","$q","storage","verto",function($rootScope,$q,storage,verto){var events=[],next=function(){var fn,fn_return;if(void 0==(fn=events.shift()))return void $rootScope.$emit("eventqueue.complete");fn_return=fn();var emitNextProgress=function(){$rootScope.$emit("eventqueue.next")};fn_return.then(function(){emitNextProgress()},function(){emitNextProgress()})};return{next:next,process:function(){$rootScope.$on("eventqueue.next",function(ev){next()})},events:events}}]);var callHistory=angular.module("vertoService").factory("callHistory",["storage",function(storage){var clear=function(){return storage.data.callHistory=[],storage.data.callHistory};return{add:function(data){var str=data.calltype,calltype=str.substring(0,1).toUpperCase()+str.substring(1,str.length);if("inbound"==calltype.toLowerCase())var info={num:data.callerIdNumber,calltype:calltype,date:data.date,time:data.time,callsid:data.callsid};else var info={num:data.num,calltype:calltype,date:data.date,time:data.time,callsid:data.callsid};storage.data.callHistory.push(info)},clear:clear}}]);callHistory.$inject=["storage"],angular.module("vertoService").service("preRoute",["$rootScope","verto","$state","ngToast",function($rootScope,verto,$state,ngToast){var checkVerto=function(){var data=localStorage.getItem("token");verto.sessid=localStorage.getItem("verto_session_uuid"),console.debug("Checking if connected to verto.. "+verto.data.connected),0==data?(verto.data.connected=!1,verto.data.connected||(ngToast.create({className:"info",content:"<p class='toast-text'>Reloading the page disconnects you from verto, please reauthenticate</p>",additionalClasses:"customtoast"}),$state.go("login"))):$state.go("dashboard")},checkVertoDash=function(){var data=localStorage.getItem("token");return verto.sessid=localStorage.getItem("verto_session_uuid"),console.debug("Checking if connected to verto.. "+verto.data.connected),0!=data};return{checkVerto:checkVerto,checkLogin:function(){verto.data.connected&&($state.go("dashboard"),console.debug("User logged in. Redirecting to dialer."))},checkVertoDash:checkVertoDash}}]);var storageService=angular.module("storageService",["ngStorage"]);angular.module("storageService").service("loadScreen",["$rootScope","$q","storage","verto","$translate",function($rootScope,$q,storage,verto,$translate){var initializing=function(){return $q(function(resolve,reject){console.log("Initializing load scripts.");resolve({activity:"initialize",status:"success",soft:!1,message:$translate.instant("Loading configuration scripts.")})})},checkBrowser=function(){return $q(function(resolve,reject){console.log("Checking browser compatibility");var result={activity:"checkBrowser",status:"success",soft:!1,message:$translate.instant("Checking for browser compatibility.")};navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia,navigator.getUserMedia||(result.status="error",result.message=$translate.instant("Browser isn't compatible."),reject(result)),resolve(result)})},checkMediaPerm=function(){return $q(function(resolve,reject){console.log("Checking media permissions");var result={activity:"mediaPermissions",status:"success",soft:!1,message:$translate.instant("Configuring media permissions.")};verto.mediaPerm(function(status){status||(result.status="error",result.message=$translate.instant("Error getting media permissions."),verto.data.mediaPerm=!1,reject(result)),verto.data.mediaPerm=!0,resolve(result)})})},refreshMediaDevices=function(){return $q(function(resolve,reject){var result={status:"success",activity:"refreshingMedia",soft:!0,message:$translate.instant("Rereshing media devices.")};verto.refreshDevices(function(status){verto.refreshDevicesCallback(function(){resolve(result)})}),console.log("Refreshing Media")})},progress=[initializing,checkBrowser,checkMediaPerm,refreshMediaDevices],progressMessage=[$translate.instant("Loading configuration scripts."),$translate.instant("Checking for browser compatibility."),$translate.instant("Configuring media permissions."),$translate.instant("Refreshing media devices.")],getProgressMessage=function(currentProgress){return void 0!=progressMessage[currentProgress]?progressMessage[currentProgress]:$translate.instant("Hold on a second.")},currentProgress=-1,progressPercentage=0,calculateProgress=function(index){return progressPercentage=(index+1)/progress.length*100};return{next:function(){var fn,fn_return,status,interrupt,activity,soft,message,promise;if(interrupt=!1,++currentProgress>=progress.length)return void $rootScope.$emit("progress.complete",currentProgress);fn=progress[currentProgress],fn_return=fn();var emitNextProgress=function(fn_return){void 0!=fn_return.promise&&(promise=fn_return.promise),status=fn_return.status,activity=fn_return.activity,soft=fn_return.soft,message=fn_return.message,"success"!=status&&(interrupt=!0),$rootScope.$emit("progress.next",currentProgress,status,promise,activity,soft,interrupt,message)};fn_return.then(function(fn_return){emitNextProgress(fn_return)},function(fn_return){emitNextProgress(fn_return)})},getProgressMessage:getProgressMessage,progress_percentage:progressPercentage,calculate:calculateProgress}}]),angular.module("storageService").service("storage",["$rootScope","$localStorage",function($rootScope,$localStorage){function changeData(verto_data){jQuery.extend(!0,data,verto_data)}var data=$localStorage,defaultSettings={uiConnected:!1,wsConnected:!1,currentCall:0,calledNumber:"",useVideo:!0,callHistory:[],callStart:!1,name:null,login:"",accessToken:"",callerIdNumber:null,userStatus:"disconnected",mutedVideo:!0,mutedMic:!1,preview:!0,selectedVideo:null,selectedVideoLabel:null,selectedAudio:null,selectedAudioLabel:null,selectedShare:null,selectedSpeaker:null,selectedSpeakerLabel:null,useStereo:!0,useSTUN:!0,useDedenc:!1,mirrorInput:!1,outgoingBandwidth:"default",incomingBandwidth:"default",vidQual:void 0,askRecoverCall:!1,googNoiseSuppression:!0,googHighpassFilter:!0,googEchoCancellation:!0,autoBand:!0,bestFrameRate:"30",numOfCalls:0};return data.$default(defaultSettings),{data:data,changeData:changeData,reset:function(){data.ui_connected=!1,data.ws_connected=!1,data.cur_call=0,data.userStatus="disconnected"},factoryReset:function(){$localStorage.$reset(),data.$reset(defaultSettings)}}}]);